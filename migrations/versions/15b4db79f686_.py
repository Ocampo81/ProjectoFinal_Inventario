"""empty message

Revision ID: 15b4db79f686
Revises: e8aba0387222
Create Date: 2024-08-11 16:23:19.633211

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '15b4db79f686'
down_revision = 'e8aba0387222'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('address', schema=None) as batch_op:
        batch_op.add_column(sa.Column('nit', sa.Integer(), nullable=False))
        batch_op.create_foreign_key(None, 'customer', ['nit'], ['nit'])
        batch_op.drop_column('id')

    with op.batch_alter_table('categoryproduct', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['category'])

    with op.batch_alter_table('customer', schema=None) as batch_op:
        batch_op.add_column(sa.Column('idUser', sa.Integer(), nullable=True))
        batch_op.drop_constraint('customer_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['idUser'], ['id'])
        batch_op.drop_column('id')

    with op.batch_alter_table('detailsales', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id_prod', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'products', ['id_prod'], ['id_prod'])

    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.add_column(sa.Column('brand', sa.String(length=100), nullable=False))
        batch_op.create_unique_constraint(None, ['prodname'])

    with op.batch_alter_table('provider', schema=None) as batch_op:
        batch_op.add_column(sa.Column('idUser', sa.Integer(), nullable=True))
        batch_op.drop_constraint('provider_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['idUser'], ['id'])
        batch_op.drop_column('id')

    with op.batch_alter_table('sales', schema=None) as batch_op:
        batch_op.add_column(sa.Column('iduser', sa.Integer(), nullable=True))
        batch_op.alter_column('date',
               existing_type=sa.VARCHAR(length=15),
               type_=sa.DateTime(),
               nullable=True)
        batch_op.drop_constraint('sales_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['iduser'], ['id'])
        batch_op.drop_column('id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('sales', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('sales_id_fkey', 'user', ['id'], ['id'])
        batch_op.alter_column('date',
               existing_type=sa.DateTime(),
               type_=sa.VARCHAR(length=15),
               nullable=False)
        batch_op.drop_column('iduser')

    with op.batch_alter_table('provider', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('provider_id_fkey', 'address', ['id'], ['id'])
        batch_op.drop_column('idUser')

    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('brand')

    with op.batch_alter_table('detailsales', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('id_prod')

    with op.batch_alter_table('customer', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('customer_id_fkey', 'address', ['id'], ['id'])
        batch_op.drop_column('idUser')

    with op.batch_alter_table('categoryproduct', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('address', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('address_id_seq'::regclass)"), autoincrement=True, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('nit')

    # ### end Alembic commands ###
